# Description: Add API to ContentClient to allow the content layer to ask
#  the embedder if it should optimize for memory usage
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/content/public/common/content_client.cc b/content/public/common/content_client.cc
--- a/content/public/common/content_client.cc
+++ b/content/public/common/content_client.cc
@@ -111,9 +111,17 @@ bool ContentClient::GetSandboxProfileFor
   return false;
 }
 #endif
 
 bool ContentClient::IsSupplementarySiteIsolationModeEnabled() {
   return false;
 }
 
+bool ContentClient::ShouldOptimizeForMemoryUsage() const {
+#if defined(OS_ANDROID)
+  return true;
+#else
+  return false;
+#endif
+}
+
 }  // namespace content
diff --git a/content/public/common/content_client.h b/content/public/common/content_client.h
--- a/content/public/common/content_client.h
+++ b/content/public/common/content_client.h
@@ -149,16 +149,20 @@ class CONTENT_EXPORT ContentClient {
 
   // Returns true if the embedder wishes to supplement the site isolation policy
   // used by the content layer. Returning true enables the infrastructure for
   // out-of-process iframes, and causes the content layer to consult
   // ContentBrowserClient::DoesSiteRequireDedicatedProcess() when making process
   // model decisions.
   virtual bool IsSupplementarySiteIsolationModeEnabled();
 
+  // Let the embedder control whether content should optimize for memory
+  // consumption (eg, limiting decoded image size)
+  virtual bool ShouldOptimizeForMemoryUsage() const;
+
  private:
   friend class ContentClientInitializer;  // To set these pointers.
   friend class InternalTestInitializer;
 
   // The embedder API for participating in browser logic.
   ContentBrowserClient* browser_;
   // The embedder API for participating in plugin logic.
   ContentPluginClient* plugin_;
