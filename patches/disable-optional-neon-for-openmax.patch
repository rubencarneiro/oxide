# Describe: Ignore arm_neon_optional in openmax, as it depends on Android
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/third_party/openmax_dl/dl/dl.gyp b/third_party/openmax_dl/dl/dl.gyp
--- a/third_party/openmax_dl/dl/dl.gyp
+++ b/third_party/openmax_dl/dl/dl.gyp
@@ -21,23 +21,23 @@
         'conditions' : [
           ['arm_neon==1', {
             # Enable build-time NEON selection.
             'defines': ['DL_ARM_NEON',],
             'direct_dependent_settings': {
               'defines': ['DL_ARM_NEON',],
             },
           }],
-          ['arm_neon==0 and arm_neon_optional==1', {
-            # Enable run-time NEON selection.
-            'defines': ['DL_ARM_NEON_OPTIONAL',],
-            'direct_dependent_settings': {
-              'defines': ['DL_ARM_NEON_OPTIONAL',],
-            },
-          }],
+          #['arm_neon==0 and arm_neon_optional==1', {
+          #  # Enable run-time NEON selection.
+          #  'defines': ['DL_ARM_NEON_OPTIONAL',],
+          #  'direct_dependent_settings': {
+          #    'defines': ['DL_ARM_NEON_OPTIONAL',],
+          #  },
+          #}],
         ],
       }],
       ['target_arch=="arm64"', {
         # Enable build-time NEON selection.
         'defines': ['DL_ARM_NEON',],
         'direct_dependent_settings': {
           'defines': ['DL_ARM_NEON',],
         },
@@ -202,32 +202,32 @@
             'sp/src/arm/armv7/omxSP_FFTInv_CToC_FC32_Sfs_s.S',
             'sp/src/arm/armv7/omxSP_FFTFwd_CToC_FC32_Sfs_s.S',
             # Real floating-point FFT
             'sp/src/arm/armv7/armSP_FFTInv_CCSToR_F32_preTwiddleRadix2_unsafe_s.S',
             'sp/src/arm/armv7/omxSP_FFTFwd_RToCCS_F32_Sfs_s.S',
             'sp/src/arm/armv7/omxSP_FFTInv_CCSToR_F32_Sfs_s.S',
           ],
           'conditions': [
-            ['arm_neon_optional==1', {
-              # Run-time NEON detection.
-              'dependencies': [
-                '../../../build/android/ndk.gyp:cpu_features',
-              ],
-              'link_settings' : {
-                'libraries': [
-                  # To get the __android_log_print routine
-                  '-llog',
-                ],
-              },
-              'sources': [
-                # Detection routine
-                'sp/src/arm/detect.c',
-              ],
-            }],
+            #['arm_neon_optional==1', {
+            #  # Run-time NEON detection.
+            #  'dependencies': [
+            #    '../../../build/android/ndk.gyp:cpu_features',
+            #  ],
+            #  'link_settings' : {
+            #    'libraries': [
+            #      # To get the __android_log_print routine
+            #      '-llog',
+            #    ],
+            #  },
+            #  'sources': [
+            #    # Detection routine
+            #    'sp/src/arm/detect.c',
+            #  ],
+            #}],
           ],
         },
         {
           # GN version: //third_party/opendmax_dl/openmax_dl_neon
           # NEON implementation of FFT. This library is NOT
           # standalone. Applications must link with openmax_dl.
           'target_name': 'openmax_dl_neon',
           'type': 'static_library',
