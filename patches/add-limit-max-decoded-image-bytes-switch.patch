# Description: Add --limit-max-decoded-image-bytes to content so that we can
#  limit for the maximum decoded image size on mobile
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/content/child/blink_platform_impl.cc b/content/child/blink_platform_impl.cc
--- a/content/child/blink_platform_impl.cc
+++ b/content/child/blink_platform_impl.cc
@@ -5,16 +5,17 @@
 #include "content/child/blink_platform_impl.h"
 
 #include <math.h>
 
 #include <vector>
 
 #include "base/allocator/allocator_extension.h"
 #include "base/bind.h"
+#include "base/command_line.h"
 #include "base/files/file_path.h"
 #include "base/memory/scoped_ptr.h"
 #include "base/memory/singleton.h"
 #include "base/metrics/histogram.h"
 #include "base/metrics/sparse_histogram.h"
 #include "base/process/process_metrics.h"
 #include "base/rand_util.h"
 #include "base/strings/string_number_conversions.h"
@@ -44,16 +45,17 @@
 #include "content/child/push_messaging/push_provider.h"
 #include "content/child/thread_safe_sender.h"
 #include "content/child/web_discardable_memory_impl.h"
 #include "content/child/web_url_loader_impl.h"
 #include "content/child/web_url_request_util.h"
 #include "content/child/websocket_bridge.h"
 #include "content/child/worker_task_runner.h"
 #include "content/public/common/content_client.h"
+#include "content/public/common/content_switches.h"
 #include "net/base/data_url.h"
 #include "net/base/net_errors.h"
 #include "net/base/net_util.h"
 #include "third_party/WebKit/public/platform/WebConvertableToTraceFormat.h"
 #include "third_party/WebKit/public/platform/WebData.h"
 #include "third_party/WebKit/public/platform/WebFloatPoint.h"
 #include "third_party/WebKit/public/platform/WebString.h"
 #include "third_party/WebKit/public/platform/WebURL.h"
@@ -1290,33 +1292,34 @@ bool BlinkPlatformImpl::memoryAllocatorW
 }
 
 blink::WebDiscardableMemory*
 BlinkPlatformImpl::allocateAndLockDiscardableMemory(size_t bytes) {
   return content::WebDiscardableMemoryImpl::CreateLockedMemory(bytes).release();
 }
 
 size_t BlinkPlatformImpl::maxDecodedImageBytes() {
-#if defined(OS_ANDROID)
+  if (!base::CommandLine::ForCurrentProcess()->HasSwitch(
+          switches::kLimitMaxDecodedImageBytes)) {
+    return noDecodedImageByteLimit;
+  }
+
   if (base::SysInfo::IsLowEndDevice()) {
     // Limit image decoded size to 3M pixels on low end devices.
     // 4 is maximum number of bytes per pixel.
     return 3 * 1024 * 1024 * 4;
   }
   // For other devices, limit decoded image size based on the amount of physical
   // memory.
   // In some cases all physical memory is not accessible by Chromium, as it can
   // be reserved for direct use by certain hardware. Thus, we set the limit so
   // that 1.6GB of reported physical memory on a 2GB device is enough to set the
   // limit at 16M pixels, which is a desirable value since 4K*4K is a relatively
   // common texture size.
   return base::SysInfo::AmountOfPhysicalMemory() / 25;
-#else
-  return noDecodedImageByteLimit;
-#endif
 }
 
 void BlinkPlatformImpl::SuspendSharedTimer() {
   ++shared_timer_suspended_;
 }
 
 void BlinkPlatformImpl::ResumeSharedTimer() {
   DCHECK_GT(shared_timer_suspended_, 0);
diff --git a/content/public/common/content_switches.cc b/content/public/common/content_switches.cc
--- a/content/public/common/content_switches.cc
+++ b/content/public/common/content_switches.cc
@@ -590,16 +590,19 @@ const char kInProcessGPU[]              
 
 // Overrides the timeout, in seconds, that a child process waits for a
 // connection from the browser before killing itself.
 const char kIPCConnectionTimeout[]          = "ipc-connection-timeout";
 
 // Specifies the flags passed to JS engine
 const char kJavaScriptFlags[]               = "js-flags";
 
+// Limit the maximum decoded size of images
+const char kLimitMaxDecodedImageBytes[]     = "limit-max-decoded-image-bytes";
+
 // Load an NPAPI plugin from the specified path.
 const char kLoadPlugin[]                    = "load-plugin";
 
 // Logs GPU control list decisions when enforcing blacklist rules.
 const char kLogGpuControlListDecisions[]    = "log-gpu-control-list-decisions";
 
 // Sets the minimum log level. Valid values are from 0 to 3:
 // INFO = 0, WARNING = 1, LOG_ERROR = 2, LOG_FATAL = 3.
diff --git a/content/public/common/content_switches.h b/content/public/common/content_switches.h
--- a/content/public/common/content_switches.h
+++ b/content/public/common/content_switches.h
@@ -164,16 +164,17 @@ CONTENT_EXPORT extern const char kGpuSan
 CONTENT_EXPORT extern const char kGpuStartupDialog[];
 extern const char kGpuVendorID[];
 CONTENT_EXPORT extern const char kHostResolverRules[];
 CONTENT_EXPORT extern const char kIgnoreCertificateErrors[];
 CONTENT_EXPORT extern const char kIgnoreGpuBlacklist[];
 CONTENT_EXPORT extern const char kInProcessGPU[];
 CONTENT_EXPORT extern const char kIPCConnectionTimeout[];
 CONTENT_EXPORT extern const char kJavaScriptFlags[];
+CONTENT_EXPORT extern const char kLimitMaxDecodedImageBytes[];
 extern const char kLoadPlugin[];
 CONTENT_EXPORT extern const char kLogGpuControlListDecisions[];
 CONTENT_EXPORT extern const char kLoggingLevel[];
 CONTENT_EXPORT extern const char kLogNetLog[];
 extern const char kLogPluginMessages[];
 extern const char kMaxUntiledLayerHeight[];
 extern const char kMaxUntiledLayerWidth[];
 extern const char kMemoryMetrics[];
