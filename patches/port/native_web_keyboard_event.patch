# Description: Build our own NativeWebKeyboardEvent implementation that
#  wraps a QKeyEvent
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/content/content_browser.gypi b/content/content_browser.gypi
--- a/content/content_browser.gypi
+++ b/content/content_browser.gypi
@@ -1155,17 +1155,17 @@
       'browser/renderer_host/media/video_capture_device_client.h',
       'browser/renderer_host/media/video_capture_host.cc',
       'browser/renderer_host/media/video_capture_host.h',
       'browser/renderer_host/media/video_capture_manager.cc',
       'browser/renderer_host/media/video_capture_manager.h',
       'browser/renderer_host/memory_benchmark_message_filter.cc',
       'browser/renderer_host/memory_benchmark_message_filter.h',
       'browser/renderer_host/native_web_keyboard_event_android.cc',
-      'browser/renderer_host/native_web_keyboard_event_aura.cc',
+      #'browser/renderer_host/native_web_keyboard_event_aura.cc',
       'browser/renderer_host/native_web_keyboard_event_mac.mm',
       'browser/renderer_host/overscroll_configuration.cc',
       'browser/renderer_host/overscroll_controller.cc',
       'browser/renderer_host/overscroll_controller.h',
       'browser/renderer_host/overscroll_controller_delegate.h',
       'browser/renderer_host/render_message_filter.cc',
       'browser/renderer_host/render_message_filter.h',
       'browser/renderer_host/render_process_host_impl.cc',
@@ -1633,16 +1633,28 @@
       'public/browser/plugin_service.h',
     ],
   },
   'sources': [
     '<@(public_browser_sources)',
     '<@(private_browser_sources)',
   ],
   'conditions': [
+    ['oxide_build=="qt"', {
+      'sources': [
+        '<(DEPTH)/../../../qt/core/port/content/browser/native_web_keyboard_event_oxide_qt.cc',
+      ],
+      'dependencies': [
+        '<(DEPTH)/../../../qt/build/system.gyp:Qt5Core',
+        '<(DEPTH)/../../../qt/build/system.gyp:Qt5Gui',
+      ],
+      'export_dependent_settings': [
+        '<(DEPTH)/../../../qt/build/system.gyp:Qt5Core',
+      ],
+    }],
     ['OS == "win"', {
       'dependencies': [
         '../third_party/power_gadget/power_gadget.gyp:power_gadget',
       ],
       'sources': [
         'browser/power_profiler/power_data_provider_ia_win.cc',
         'browser/power_profiler/power_data_provider_ia_win.h',
       ]
diff --git a/content/public/browser/native_web_keyboard_event.h b/content/public/browser/native_web_keyboard_event.h
--- a/content/public/browser/native_web_keyboard_event.h
+++ b/content/public/browser/native_web_keyboard_event.h
@@ -8,16 +8,24 @@
 #include "base/basictypes.h"
 #include "base/compiler_specific.h"
 #include "build/build_config.h"
 #include "content/common/content_export.h"
 #include "third_party/WebKit/public/web/WebInputEvent.h"
 #include "ui/events/event_constants.h"
 #include "ui/gfx/native_widget_types.h"
 
+#if defined(OXIDE_BUILD_QT)
+#include <QtGlobal>
+
+QT_BEGIN_NAMESPACE
+class QKeyEvent;
+QT_END_NAMESPACE
+#endif
+
 namespace ui {
 class KeyEvent;
 }
 
 namespace content {
 
 // Owns a platform specific event; used to pass own and pass event through
 // platform independent code.
@@ -52,17 +60,21 @@ struct CONTENT_EXPORT NativeWebKeyboardE
 #endif
 #endif
 
   NativeWebKeyboardEvent(const NativeWebKeyboardEvent& event);
   ~NativeWebKeyboardEvent();
 
   NativeWebKeyboardEvent& operator=(const NativeWebKeyboardEvent& event);
 
+#if defined(OXIDE_BUILD_QT)
+  QKeyEvent* os_event;
+#else
   gfx::NativeEvent os_event;
+#endif
 
   // True if the browser should ignore this event if it's not handled by the
   // renderer. This happens for RawKeyDown events that are created while IME is
   // active and is necessary to prevent backspace from doing "history back" if
   // it is hit in ime mode.
   // Currently, it's only used by Linux and Mac ports.
   bool skip_in_browser;
 
