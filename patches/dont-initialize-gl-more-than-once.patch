# Description: Don't call gfx::GLSurace::InitializeOneOff() more than once.
#  We call it from ContentMainDelegate, as we need it fairly early on and it
#  needs to be initialized on the main thread
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/content/gpu/gpu_child_thread.cc b/content/gpu/gpu_child_thread.cc
--- a/content/gpu/gpu_child_thread.cc
+++ b/content/gpu/gpu_child_thread.cc
@@ -145,18 +145,20 @@ GpuChildThread::GpuChildThread(const InP
 #if defined(OS_WIN)
   target_services_ = NULL;
 #endif
   DCHECK(base::CommandLine::ForCurrentProcess()->HasSwitch(
              switches::kSingleProcess) ||
          base::CommandLine::ForCurrentProcess()->HasSwitch(
              switches::kInProcessGPU));
 
+#if 0
   if (!gfx::GLSurface::InitializeOneOff())
     VLOG(1) << "gfx::GLSurface::InitializeOneOff failed";
+#endif
 
   g_lazy_tls.Pointer()->Set(this);
   g_thread_safe_sender.Get() = thread_safe_sender();
   g_thread_safe_task_runner.Get() = message_loop()->task_runner();
 }
 
 GpuChildThread::~GpuChildThread() {
   g_lazy_tls.Pointer()->Set(NULL);
