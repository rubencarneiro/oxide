diff -r b521f239eb9f content/public/renderer/content_renderer_client.h
--- a/content/public/renderer/content_renderer_client.h	Wed Oct 29 16:19:10 2014 +1000
+++ b/content/public/renderer/content_renderer_client.h	Thu Nov 13 16:07:50 2014 +1000
@@ -45,10 +45,18 @@
 class WebThemeEngine;
 class WebURLRequest;
 class WebWorkerPermissionClientProxy;
+class WebMediaPlayer;
+class WebFrame;
+class WebMediaPlayerClient;
 struct WebPluginParams;
 struct WebURLError;
 }
 
+namespace media {
+class WebMediaPlayerDelegate;
+class MediaLog;
+}
+
 namespace content {
 class BrowserPluginDelegate;
 class DocumentState;
@@ -274,6 +282,13 @@
   // Returns a user agent override specific for |url|, or empty string if
   // default user agent should be used.
   virtual std::string GetUserAgentOverrideForURL(const GURL& url);
+
+  // Allow overriding default media player
+  virtual blink::WebMediaPlayer*  OverrideWebMediaPlayer(
+              blink::WebFrame* frame,
+              blink::WebMediaPlayerClient* client,
+              base::WeakPtr<media::WebMediaPlayerDelegate> delegate,
+              media::MediaLog* media_log) { return 0; }
 };
 
 }  // namespace content
diff -r b521f239eb9f content/renderer/render_frame_impl.cc
--- a/content/renderer/render_frame_impl.cc	Wed Oct 29 16:19:10 2014 +1000
+++ b/content/renderer/render_frame_impl.cc	Thu Nov 13 16:07:50 2014 +1000
@@ -1671,6 +1671,17 @@
 #if defined(OS_ANDROID)
   return CreateAndroidWebMediaPlayer(url, client, initial_cdm);
 #else
+
+  blink::WebMediaPlayer* webMediaPlayer = 
+    GetContentClient()->renderer()->OverrideWebMediaPlayer(
+        frame_,
+        client,
+        weak_factory_.GetWeakPtr(),
+        new RenderMediaLog());
+
+  if (webMediaPlayer != 0)
+    return webMediaPlayer; 
+
   RenderThreadImpl* render_thread = RenderThreadImpl::current();
   media::WebMediaPlayerParams params(
       base::Bind(&ContentRendererClient::DeferMediaLoad,
