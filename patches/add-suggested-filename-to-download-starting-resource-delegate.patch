diff --git a/content/browser/loader/resource_dispatcher_host_impl.cc b/content/browser/loader/resource_dispatcher_host_impl.cc
index 9968e6a..f464773 100644
--- a/content/browser/loader/resource_dispatcher_host_impl.cc
+++ b/content/browser/loader/resource_dispatcher_host_impl.cc
@@ -23,6 +23,7 @@
 #include "base/metrics/sparse_histogram.h"
 #include "base/profiler/scoped_tracker.h"
 #include "base/stl_util.h"
+#include "base/strings/utf_string_conversions.h"
 #include "base/third_party/dynamic_annotations/dynamic_annotations.h"
 #include "base/time/time.h"
 #include "content/browser/appcache/appcache_interceptor.h"
@@ -708,6 +725,11 @@ ResourceDispatcherHostImpl::CreateResourceHandlerForDownload(
     uint32 id,
     scoped_ptr<DownloadSaveInfo> save_info,
     const DownloadUrlParameters::OnStartedCallback& started_cb) {
+  std::string suggested_filename;
+  // The logic is suggested in download_save_info.h
+  suggested_filename =
+    save_info->file_path.empty() ? base::UTF16ToUTF8(save_info->suggested_name)
+      : save_info->file_path.value();
   scoped_ptr<ResourceHandler> handler(
       new DownloadResourceHandler(id, request, started_cb, save_info.Pass()));
   if (delegate_) {
@@ -718,7 +740,7 @@ ResourceDispatcherHostImpl::CreateResourceHandlerForDownload(
     delegate_->DownloadStarting(
         request, request_info->GetContext(), request_info->GetChildID(),
         request_info->GetRouteID(), request_info->GetRequestID(),
-        is_content_initiated, must_download, &throttles);
+        is_content_initiated, must_download, suggested_filename, &throttles);
     if (!throttles.empty()) {
       handler.reset(
           new ThrottlingResourceHandler(
diff --git a/content/public/browser/resource_dispatcher_host_delegate.cc b/content/public/browser/resource_dispatcher_host_delegate.cc
index 40a4d98..b7a9ad9 100644
--- a/content/public/browser/resource_dispatcher_host_delegate.cc
+++ b/content/public/browser/resource_dispatcher_host_delegate.cc
@@ -32,6 +32,7 @@ void ResourceDispatcherHostDelegate::DownloadStarting(
     int request_id,
     bool is_content_initiated,
     bool must_download,
+    const std::string& suggested_filename,
     ScopedVector<ResourceThrottle>* throttles) {
 }
 
diff --git a/content/public/browser/resource_dispatcher_host_delegate.h b/content/public/browser/resource_dispatcher_host_delegate.h
index 8bc3084..11205f4 100644
--- a/content/public/browser/resource_dispatcher_host_delegate.h
+++ b/content/public/browser/resource_dispatcher_host_delegate.h
@@ -62,6 +63,7 @@ class CONTENT_EXPORT ResourceDispatcherHostDelegate {
                                 int request_id,
                                 bool is_content_initiated,
                                 bool must_download,
+                                const std::string& suggested_filename,
                                 ScopedVector<ResourceThrottle>* throttles);
 
   // Creates a ResourceDispatcherHostLoginDelegate that asks the user for a
