# Description: Don't provide an implementation of base::MessagePumpX11::GetDefaultXDisplay(),
#  so that we can override it in Oxide and fetch the default display from the toolkit.
#  This means that we can create all GL contexts with the same display instance, which
#  is necessary for resource sharing
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/base/message_loop/message_pump_x11.cc b/base/message_loop/message_pump_x11.cc
--- a/base/message_loop/message_pump_x11.cc
+++ b/base/message_loop/message_pump_x11.cc
@@ -136,22 +136,24 @@ MessagePumpX11::MessagePumpX11() : Messa
 
 MessagePumpX11::~MessagePumpX11() {
   g_source_destroy(x_source_);
   g_source_unref(x_source_);
   XCloseDisplay(g_xdisplay);
   g_xdisplay = NULL;
 }
 
+#if 0
 // static
 Display* MessagePumpX11::GetDefaultXDisplay() {
   if (!g_xdisplay)
     g_xdisplay = XOpenDisplay(NULL);
   return g_xdisplay;
 }
+#endif
 
 #if defined(TOOLKIT_GTK)
 // static
 MessagePumpX11* MessagePumpX11::Current() {
   MessageLoop* loop = MessageLoop::current();
   return static_cast<MessagePumpX11*>(loop->pump_gpu());
 }
 #else
