# Description: Use a lower limit for discardable memory on mobile
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/content/common/host_discardable_shared_memory_manager.cc b/content/common/host_discardable_shared_memory_manager.cc
--- a/content/common/host_discardable_shared_memory_manager.cc
+++ b/content/common/host_discardable_shared_memory_manager.cc
@@ -19,16 +19,17 @@
 #include "base/thread_task_runner_handle.h"
 #include "base/trace_event/memory_allocator_dump.h"
 #include "base/trace_event/memory_dump_manager.h"
 #include "base/trace_event/process_memory_dump.h"
 #include "base/trace_event/trace_event.h"
 #include "content/common/child_process_host_impl.h"
 #include "content/common/discardable_shared_memory_heap.h"
 #include "content/public/common/child_process_host.h"
+#include "content/public/common/content_client.h"
 
 namespace content {
 namespace {
 
 class DiscardableMemoryImpl : public base::DiscardableMemory {
  public:
   DiscardableMemoryImpl(scoped_ptr<base::DiscardableSharedMemory> shared_memory,
                         const base::Closure& deleted_callback)
@@ -83,22 +84,24 @@ class DiscardableMemoryImpl : public bas
   bool is_locked_;
 
   DISALLOW_COPY_AND_ASSIGN(DiscardableMemoryImpl);
 };
 
 base::LazyInstance<HostDiscardableSharedMemoryManager>
     g_discardable_shared_memory_manager = LAZY_INSTANCE_INITIALIZER;
 
-#if defined(OS_ANDROID)
-// Limits the number of FDs used to 32, assuming a 4MB allocation size.
-const int64_t kMaxDefaultMemoryLimit = 128 * 1024 * 1024;
-#else
-const int64_t kMaxDefaultMemoryLimit = 512 * 1024 * 1024;
-#endif
+int64_t GetMaxDefaultMemoryLimit() {
+  if (GetContentClient()->ShouldOptimizeForMemoryUsage()) {
+    // Limits the number of FDs used to 32, assuming a 4MB allocation size.
+    return 128 * 1024 * 1024;
+  }
+
+  return 512 * 1024 * 1024;
+}
 
 const int kEnforceMemoryPolicyDelayMs = 1000;
 
 // Global atomic to generate unique discardable shared memory IDs.
 base::StaticAtomicSequenceNumber g_next_discardable_shared_memory_id;
 
 }  // namespace
 
@@ -112,18 +115,18 @@ HostDiscardableSharedMemoryManager::Memo
 
 HostDiscardableSharedMemoryManager::HostDiscardableSharedMemoryManager()
     : memory_limit_(
           // Allow 25% of physical memory to be used for discardable memory.
           std::min(base::SysInfo::AmountOfPhysicalMemory() / 4,
                    base::SysInfo::IsLowEndDevice()
                        ?
                        // Use 1/8th of discardable memory on low-end devices.
-                       kMaxDefaultMemoryLimit / 8
-                       : kMaxDefaultMemoryLimit)),
+                       GetMaxDefaultMemoryLimit() / 8
+                       : GetMaxDefaultMemoryLimit())),
       bytes_allocated_(0),
       memory_pressure_listener_(new base::MemoryPressureListener(
           base::Bind(&HostDiscardableSharedMemoryManager::OnMemoryPressure,
                      base::Unretained(this)))),
       enforce_memory_policy_pending_(false),
       weak_ptr_factory_(this) {
   DCHECK_NE(memory_limit_, 0u);
   base::trace_event::MemoryDumpManager::GetInstance()->RegisterDumpProvider(
