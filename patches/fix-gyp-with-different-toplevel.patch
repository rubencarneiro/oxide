# Description: Make gyp work correctly when toplevel != depth. This does 2
#  things:
#  1) It makes LIB_DIR work correctly, eg, libvpx.gyp refers to the following:
#      "<(LIB_DIR)/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a"
#     However, libvpx_asm_offsets_vpx_scale.a is stored at:
#      obj.target/chromium/src/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a
#  2) Uses the toplevel directory for the regen flags. The regen target chdirs
#     to this, so using depth is wrong (it results in, eg, -I../../qt/qt.gypi
#     rather than -Iqt/qt.gypi
# Author: Chris Coulson <chris.coulson@canonical.com>

diff --git a/tools/gyp/pylib/gyp/__init__.py b/tools/gyp/pylib/gyp/__init__.py
--- a/tools/gyp/pylib/gyp/__init__.py
+++ b/tools/gyp/pylib/gyp/__init__.py
@@ -190,17 +190,17 @@ def RegenerateFlags(options):
   object (even in the absence of the environment variables.)
 
   Any path options will be normalized relative to depth.
 
   The format flag is not included, as it is assumed the calling generator will
   set that as appropriate.
   """
   def FixPath(path):
-    path = gyp.common.FixIfRelativePath(path, options.depth)
+    path = gyp.common.FixIfRelativePath(path, options.toplevel_dir)
     if not path:
       return os.path.curdir
     return path
 
   def Noop(value):
     return value
 
   # We always want to ignore the environment when regenerating, to avoid

diff --git a/tools/gyp/pylib/gyp/generator/make.py b/tools/gyp/pylib/gyp/generator/make.py
--- a/tools/gyp/pylib/gyp/generator/make.py
+++ b/tools/gyp/pylib/gyp/generator/make.py
@@ -85,17 +85,21 @@ def CalculateVariables(default_variables
     COMPILABLE_EXTENSIONS.update({'.m': 'objc', '.mm' : 'objcxx'})
   else:
     operating_system = flavor
     if flavor == 'android':
       operating_system = 'linux'  # Keep this legacy behavior for now.
     default_variables.setdefault('OS', operating_system)
     default_variables.setdefault('SHARED_LIB_SUFFIX', '.so')
     default_variables.setdefault('SHARED_LIB_DIR','$(builddir)/lib.$(TOOLSET)')
-    default_variables.setdefault('LIB_DIR', '$(obj).$(TOOLSET)')
+    offset = '.'
+    if 'options' in params:
+      offset = os.path.relpath(params['options'].depth,
+                               params['options'].toplevel_dir)
+    default_variables.setdefault('LIB_DIR', os.path.join('$(obj).$(TOOLSET)', offset))
 
 
 def CalculateGeneratorInputInfo(params):
   """Calculate the generator specific info that gets fed to input (called by
   gyp)."""
   generator_flags = params.get('generator_flags', {})
   android_ndk_version = generator_flags.get('android_ndk_version', None)
   # Android NDK requires a strict link order.
