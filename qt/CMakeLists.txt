set(CMAKE_INSTALL_LIBEXECDIR ${CMAKE_INSTALL_LIBDIR}/oxide-qt)

find_package(Qt5Core)
find_package(Qt5Gui)
find_package(Qt5Qml)
find_package(Qt5Quick)

set(OXIDE_LIB_VERSIONED ${OXIDE_LIB}.${QT_SO_VERSION})
set(OXIDE_QMLPLUGIN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/imports)
set(OXIDE_BIN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)

configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/run_qmlscene.sh.in
    ${CMAKE_CURRENT_BINARY_DIR}/run_qmlscene.sh
    IMMEDIATE @ONLY)
file(INSTALL ${CMAKE_CURRENT_BINARY_DIR}/run_qmlscene.sh
     DESTINATION ${CMAKE_BINARY_DIR}
     FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE 
         GROUP_READ GROUP_EXECUTE
         WORLD_READ WORLD_EXECUTE)

add_custom_target(
    gyp_postbuild ALL
    COMMAND ${CMAKE_COMMAND} -E copy_if_different ${OXIDE_LIB_VERSIONED} ${OXIDE_LIB}
    COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CHROMIUM_PRODUCT_DIR}/chrome_sandbox ${CHROMIUM_PRODUCT_DIR}/chrome-sandbox
    DEPENDS gyp_all
    COMMENT "Running gyp post build commands")

add_subdirectory(quick)
if(WANT_OXIDEQMLSCENE)
  add_subdirectory(qmlrunner)
endif()
if(ENABLE_TESTS)
  add_subdirectory(tests)
endif()

install(FILES ${OXIDE_LIB_VERSIONED} DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(FILES ${OXIDE_LIB} DESTINATION ${CMAKE_INSTALL_LIBDIR})

install(FILES ${CHROMIUM_PRODUCT_DIR}/oxide.pak
        DESTINATION ${CMAKE_INSTALL_LIBEXECDIR})
install(FILES ${CHROMIUM_PRODUCT_DIR}/oxide_100_percent.pak
        DESTINATION ${CMAKE_INSTALL_LIBEXECDIR})
install(PROGRAMS ${CHROMIUM_PRODUCT_DIR}/chrome-sandbox
        DESTINATION ${CMAKE_INSTALL_LIBEXECDIR}
        PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ SETUID)
install(PROGRAMS ${CHROMIUM_PRODUCT_DIR}/oxide-renderer DESTINATION ${CMAKE_INSTALL_LIBEXECDIR})
